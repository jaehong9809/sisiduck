pipeline {
    agent any

    environment {
        ENV_FILE = credentials('env-file-credentials')  // Jenkins에 등록된 .env 파일
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Copy .env File') {
            steps {
                dir('finafanAI') {
                    withCredentials([
                        file(credentialsId: 'env-file-credentials', variable: 'ENV_FILE')
                    ]) {
                        sh '''
                            echo "📦 Copying .env from Jenkins credentials"
                            cp $ENV_FILE .env
                            chmod 600 .env
                        '''
                    }
                }
            }
        }

        stage('Stop Existing Containers') {
            steps {
                dir('finafanAI') {
                    sh '''
                        docker ps -q --filter "name=ai-server" | xargs -r docker stop
                        docker ps -aq --filter "name=ai-server" | xargs -r docker rm
                    '''
                }
            }
        }

        stage('Docker Compose Up') {
            steps {
                dir('finafanAI') {
                    sh 'docker-compose down'
                    sh 'docker-compose up -d --build'
                }
            }
        }
    }

    post {
        success {
            echo '✅ FastAPI 서버 배포 성공!'
        }
        failure {
            echo '❌ FastAPI 서버 배포 실패!'
        }
    }
}
