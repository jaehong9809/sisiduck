# input {
#   file {
#     path => [
#       "/usr/share/logstash/pipeline/logs/app*/*.log",
#       "/usr/share/logstash/pipeline/logs/*.log"
#     ]
#     start_position => "beginning"
#     sincedb_path => "/dev/null"
#   }
#
#   tcp {
#     port => 5044
#     codec => json_lines
#   }
# }
#
# filter {
#   # 파일로부터 읽은 로그 처리
#   if [path] {
#     # 파일 경로에서 앱 이름 추출 (app1, app2, app3, ...)
#     grok {
#       match => { "path" => [
#         ".*\/app(?<app_number>\d+)\/.*\.log",  # /logs/app1/*.log 형식
#         ".*\/spring-app(?<app_number>\d*)\.log"  # /logs/spring-app1.log 형식
#       ]}
#       tag_on_failure => []
#     }
#
#     # 표준 Spring Boot 로그 형식 처리
#     grok {
#       match => {
#         "message" => [
#           "%{TIMESTAMP_ISO8601:log_timestamp} \[%{DATA:thread}\] %{LOGLEVEL:level}\s+%{NOTSPACE:logger} - %{GREEDYDATA:log_message}",
#           "%{GREEDYDATA:log_message}"  # 다른 모든 형식의 로그 메시지 캡처
#         ]
#       }
#       tag_on_failure => ["_grok_parse_failure"]
#     }
#
#     # 타임스탬프가 있는 경우에만 날짜 파싱
#     if [log_timestamp] {
#       date {
#         match => [ "log_timestamp", "yyyy-MM-dd HH:mm:ss.SSS" ]
#         target => "@timestamp"
#       }
#
#       # log_timestamp 필드 제거 (이미 @timestamp로 변환했으므로)
#       mutate {
#         rename => { "log_message" => "message" }
#         remove_field => [ "log_timestamp" ]
#       }
#     }
#
#     # 애플리케이션 이름 설정
#     if [app_number] and [app_number] != "" {
#       mutate {
#         add_field => { "application" => "app%{app_number}" }
#       }
#     } else {
#       # 앱 번호를 추출하지 못한 경우 기본값
#       mutate {
#         add_field => { "application" => "spring-app" }
#       }
#     }
#
#     # 임시 필드 제거
#     mutate {
#       remove_field => [ "app_number" ]
#     }
#   }
#
#   # TCP로 받은 JSON 로그의 경우 application 필드가 없으면 추가
#   else if ![application] {
#     mutate {
#       add_field => { "application" => "spring-app" }
#     }
#   }
#
#   if [timestamp] {
#     mutate {
#       remove_field => [ "timestamp" ]
#     }
#   }
# }
#
# output {
#   elasticsearch {
#     hosts => ["elasticsearch:9200"]
#     index => "spring-logs-%{+YYYY.MM.dd}"
#   }
#   stdout { codec => rubydebug }
# }