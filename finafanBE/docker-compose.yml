services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      TZ: Asia/Seoul
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - app-network
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  spring-app1:
    env_file:
      - .env
    image: ${DOCKER_USER}/backend:${BUILD_NUMBER}
    container_name: spring-app
    ports:
      - "8081:8081"
    environment:
      SPRING_PROFILES_ACTIVE: "local,redis-sentinel"
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      SERVER_PORT: "8081"
    volumes:
      - ./logs/app1:/app/logs
    networks:
      - app-network
    depends_on:
      mysql:
        condition: service_healthy

  redis-master:
    image: redis:6.2
    container_name: redis-master
    ports:
      - "6379:6379"
    volumes:
      - redis-master-data:/data
    command: redis-server --requirepass ${REDIS_PASSWORD}
    networks:
      - app-network

    redis-slave-1:
      image: redis:6.2
      container_name: redis-slave-1
      ports:
        - "6380:6379"
      command: redis-server --slaveof redis-master 6379 --requirepass ${REDIS_PASSWORD} --masterauth ${REDIS_PASSWORD}
      depends_on:
        - redis-master
      networks:
        - app-network

    redis-slave-2:
      image: redis:6.2
      container_name: redis-slave-2
      ports:
        - "6381:6379"
      command: redis-server --slaveof redis-master 6379 --requirepass ${REDIS_PASSWORD} --masterauth ${REDIS_PASSWORD}
      depends_on:
        - redis-master
      networks:
        - app-network

    redis-sentinel-1:
      image: redis:6.2
      container_name: redis-sentinel-1
      ports:
        - "26379:26379"
      volumes:
        - ./redis/sentinel1.conf:/sentinel.conf
      command: redis-sentinel /sentinel.conf
      depends_on:
        - redis-master
        - redis-slave-1
        - redis-slave-2
      networks:
        - app-network

    redis-sentinel-2:
      image: redis:6.2
      container_name: redis-sentinel-2
      ports:
        - "26380:26379"
      volumes:
        - ./redis/sentinel2.conf:/sentinel.conf
      command: redis-sentinel /sentinel.conf
      depends_on:
        - redis-master
        - redis-slave-1
        - redis-slave-2
      networks:
        - app-network

    redis-sentinel-3:
      image: redis:6.2
      container_name: redis-sentinel-3
      ports:
        - "26381:26379"
      volumes:
        - ./redis/sentinel3.conf:/sentinel.conf
      command: redis-sentinel /sentinel.conf
      depends_on:
        - redis-master
        - redis-slave-1
        - redis-slave-2
      networks:
        - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql-data:
  redis-master-data: