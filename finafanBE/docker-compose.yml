services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      TZ: Asia/Seoul
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - app-network
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  spring-app1:
    env_file:
      - .env
    image: ${DOCKER_USER}/backend:${BUILD_NUMBER}
    container_name: spring-app
    ports:
      - "8081:8081"
    environment:
      SPRING_PROFILES_ACTIVE: "local,redis-sentinel"
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      SERVER_PORT: "8081"
    volumes:
      - ./logs/app1:/app/logs
    networks:
      - app-network
    depends_on:
      mysql:
        condition: service_healthy

  redis-slave-1:
    image: redis:6.2
    container_name: redis-slave-1
    ports:
      - "6380:6379"
    command: redis-server --slaveof redis-server 6379 --requirepass ${REDIS_PASSWORD} --masterauth ${REDIS_PASSWORD}
    networks:
      - app-network

  redis-slave-2:
    image: redis:6.2
    container_name: redis-slave-2
    ports:
      - "6381:6379"
    command: redis-server --slaveof redis-server 6379 --requirepass ${REDIS_PASSWORD} --masterauth ${REDIS_PASSWORD}
    networks:
      - app-network

  redis-sentinel-1:
    image: redis:6.2
    container_name: redis-sentinel-1
    restart: always
    ports:
      - "26379:26379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: |
      bash -c "mkdir -p /etc/redis &&
      echo 'port 26379
      sentinel monitor mymaster 172.21.0.2 6379 2
      sentinel down-after-milliseconds mymaster 5000
      sentinel failover-timeout mymaster 60000
      sentinel parallel-syncs mymaster 1
      sentinel auth-pass mymaster '${REDIS_PASSWORD} > /etc/redis/sentinel.conf &&
      redis-sentinel /etc/redis/sentinel.conf"
    networks:
      - app-network

  redis-sentinel-2:
    image: redis:6.2
    container_name: redis-sentinel-2
    restart: always
    ports:
      - "26380:26379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: |
      bash -c "mkdir -p /etc/redis &&
      echo 'port 26379
      sentinel monitor mymaster 172.21.0.2 6379 2
      sentinel down-after-milliseconds mymaster 5000
      sentinel failover-timeout mymaster 60000
      sentinel parallel-syncs mymaster 1
      sentinel auth-pass mymaster '${REDIS_PASSWORD} > /etc/redis/sentinel.conf &&
      redis-sentinel /etc/redis/sentinel.conf"
    networks:
      - app-network

  redis-sentinel-3:
    image: redis:6.2
    container_name: redis-sentinel-3
    restart: always
    ports:
      - "26381:26379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: |
      bash -c "mkdir -p /etc/redis &&
      echo 'port 26379
      sentinel monitor mymaster 172.21.0.2 6379 2
      sentinel down-after-milliseconds mymaster 5000
      sentinel failover-timeout mymaster 60000
      sentinel parallel-syncs mymaster 1
      sentinel auth-pass mymaster '${REDIS_PASSWORD} > /etc/redis/sentinel.conf &&
      redis-sentinel /etc/redis/sentinel.conf"
    networks:
      - app-network

networks:
  app-network:
    external: true  # 기존에 생성된 네트워크 사용

volumes:
  mysql-data: